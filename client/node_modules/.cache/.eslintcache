[{"/Users/taylorcunningham/Desktop/Design/project-code/client/src/index.js":"1","/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/HomePage.js":"2","/Users/taylorcunningham/Desktop/Design/project-code/client/src/fetcher.js":"3","/Users/taylorcunningham/Desktop/Design/project-code/client/src/canvas/canvasjs.react.js":"4","/Users/taylorcunningham/Desktop/Design/project-code/client/src/canvas/canvasjs.min.js":"5","/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/MapPage.js":"6","/Users/taylorcunningham/Desktop/Design/project-code/client/src/components/MenuBar.js":"7"},{"size":654,"mtime":1675135467872,"results":"8","hashOfConfig":"9"},{"size":1328,"mtime":1675102514126,"results":"10","hashOfConfig":"9"},{"size":1865,"mtime":1675135413679,"results":"11","hashOfConfig":"9"},{"size":2107,"mtime":1649253814000,"results":"12","hashOfConfig":"9"},{"size":486637,"mtime":1670251582000,"results":"13","hashOfConfig":"9"},{"size":7694,"mtime":1675132854335,"results":"14","hashOfConfig":"9"},{"size":702,"mtime":1675135312158,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6neesv",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/taylorcunningham/Desktop/Design/project-code/client/src/index.js",[],"/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/HomePage.js",["35","36","37","38","39","40","41","42"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, } from \"shards-react\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nvar mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\nmapboxgl.accessToken = 'pk.eyJ1IjoidGF5bG9yY3UiLCJhIjoiY2xiYm93Znh1MDBvbDNwb280ODhhMHJhbyJ9.0N14a-R8mihTSAG4NTvGlw';\n\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n    }\n\n  }\n\n  componentDidMount() {\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11'\n    });\n  }\n\n \n  \n\n\n  render() {\n\n    return (\n      <html>\n      <head>\n        <link href='https://api.mapbox.com/mapbox-gl-js/v2.8.1/mapbox-gl.css' rel='stylesheet' />\n      </head>\n      <body>\n      <div>\n        <MenuBar />\n        <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n          <Row>\n          <h3> Welcome to 'MedMap' Application! </h3>\n          </Row>\n          <Row>\n          <div id=\"map\" style={{position: \"absolute\", top: \"0\", bottom: \"0\", width: \"100%\" }}></div>\n          </Row>\n        \n        </Form>\n      </div>\n     \n      </body>\n      </html>\n    )\n  }\n}\n\nexport default HomePage\n\n",["43","44"],"/Users/taylorcunningham/Desktop/Design/project-code/client/src/fetcher.js",[],"/Users/taylorcunningham/Desktop/Design/project-code/client/src/canvas/canvasjs.react.js",["45"],"ï»¿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2022 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\n\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? { ...props.containerProps } : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tif (this.chart)\r\n\t\t\tthis.chart.destroy();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;",["46","47"],"/Users/taylorcunningham/Desktop/Design/project-code/client/src/canvas/canvasjs.min.js",[],"/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/MapPage.js",["48","49","50","51","52","53","54","55","56","57","58","59","60"],"import React, { Component } from 'react';\nimport USAMap from \"react-usa-map\";\nimport { Form, FormInput, FormGroup, Button, } from \"shards-react\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getNewsRankings, getNameFromCode, getCountiesFromState, getCodeToNumericRanking, getAccessRankings, getQualityRankings, getPublicHealthRankings } from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n// COLUMNS FOR STATE DISPLAY\nconst stateColumns = [\n    {\n      title: 'State',\n      dataIndex: 'Name',\n      key: 'Name'\n    },\n    {\n      title: 'Code',\n      dataIndex: 'Code',\n      key: 'Code'\n    },\n    {\n      title: 'Health Care Access Ranking',\n      dataIndex: 'HealthCareAccessRanking',\n      key: 'HealthCareAccessRanking'\n      \n    },\n    {\n      title: 'Health Care Quality Ranking',\n      dataIndex: 'HealthCareQualityRanking',\n      key: 'HealthCareQualityRanking'\n    },\n    {\n        title: 'Public Health Ranking',\n        dataIndex: 'PublicHealthRanking',\n        key: 'PublicHealthRanking'\n    },\n    {\n        title: 'Composite Ranking',\n        dataIndex: 'CompositeRanking',\n        key: 'CompositeRanking'\n    }\n];\n\n\n// COLUMNS FOR COUNTY DISPLAY\nconst countyColumns = [\n    {\n        title: 'County Name',\n        dataIndex: 'name',\n        key: 'name',\n        sorter: (a, b) => a.name.localeCompare(b.name)\n      },\n      {\n        title: 'Numeric Code',\n        dataIndex: 'fips',\n        key: 'fips'\n      },\n];\n\nclass MapPage extends React.Component {\n    // CLASS CONSTRUCTOR\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            selectedState: \"\",\n            stateRankingMethod: \"Overall\",\n            stateResults: [],\n            countyResults: [],\n            stateCodeToNumericRanking: [], \n        }\n\n        this.handleStateSelected = this.handleStateSelected.bind(this)\n        this.setStateRankingMethod = this.setStateRankingMethod.bind(this)\n        this.mapHandler = this.mapHandler.bind(this)\n        this.statesCustomConfig = this.statesCustomConfig.bind(this)\n    }\n\n    // MAP HANDLER FROM API \n    mapHandler = (event) => {\n        this.handleStateSelected(event.target.dataset.name)\n    };\n\n    // CONFIGURATION FOR STATE COLORING\n    statesCustomConfig = () => {\n        // initialize ranking data\n        var rankingData = {}\n\n        // mapping of states to rankings \n        this.state.stateCodeToNumericRanking.map((name, index) => {\n            // initialize variables\n            var stateCode = name.Code\n            var stateRanking = name.Ranking\n            var color = \"\"\n\n            // if looking at overall rankings \n            if (this.state.stateRankingMethod == \"Overall\") {\n                console.log('setting overall rankings')\n                // sort by \n                if (stateRanking <= 30) {\n                    color = \"green\"\n                } else if (stateRanking <= 110) {\n                    color = \"yellow\"\n                } else {\n                    color = \"red\"\n                }\n            }\n\n            // if looking at other rankings \n            else {\n                console.log('setting other rankings')\n                // sort by \n                if (stateRanking <= 15) {\n                    color = \"green\"\n                } else if (stateRanking <= 35) {\n                    color = \"yellow\"\n                } else {\n                    color = \"red\"\n                }\n            }\n            \n\n            // fill in object data\n            var stateCodeFill = {}\n            stateCodeFill[\"fill\"] =  color\n            rankingData[stateCode] = stateCodeFill\n        });\n\n        return rankingData;\n    };\n\n    // HANDLE STATE BEING SELECTED, GET DATA\n    handleStateSelected(stateCode) {\n        // call function to get state name from code \n        getNameFromCode(stateCode).then(res => {\n            this.setState({ selectedState: res.results[0].Name })\n        });\n\n        // call function to get rankings\n        getNewsRankings(stateCode).then(res => {\n            this.setState({ stateResults: res.results })\n        });\n\n        // call function to get list of all counties \n        getCountiesFromState(stateCode).then(res => {\n            this.setState({ countyResults: res.results })\n        });\n    }\n\n    // SET STATE RANKING METHOD FROM DROPDOWN\n    setStateRankingMethod(value) {\n        // set state ranking method internally \n        this.setState({ stateRankingMethod: value })\n\n        // call function to get values and change colors accordingly \n        if (value == \"HealthCareAccess\") {\n            getAccessRankings().then(res => {\n                this.setState({ stateCodeToNumericRanking: res.results })\n            });\n        } else if (value == \"Overall\") {\n            getCodeToNumericRanking().then(res => {\n                this.setState({ stateCodeToNumericRanking: res.results })\n            });\n        } else if (value == \"HealthCareQuality\") {\n            getQualityRankings().then(res => {\n                this.setState({ stateCodeToNumericRanking: res.results })\n            });\n        } else if (value == \"PublicHealth\") {\n            getPublicHealthRankings().then(res => {\n                this.setState({ stateCodeToNumericRanking: res.results })\n            });\n        }\n    }  \n\n    componentDidMount() {\n        // when component originally mounts, set overall rankings\n         getCodeToNumericRanking().then(res => {\n            this.setState({ stateCodeToNumericRanking: res.results })\n        }); \n    } \n\n  render() {\n\n    return (\n        <div className=\"App\">\n        <MenuBar />\n        <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n                <h3> Welcome to MedMap main interface!</h3>\n                <p> This ranking system is based on a 1st to 50th ranking by state in three categories: healthcare access, healthcare quality,\n                    and public health. For ranking selection in each of these categories, a 'green' state is ranked between 1st and 15th, a 'yellow' state \n                    is ranked between 16th and 35th, and a 'red' state is ranked between 36th and 50th.  For the overall ranking selection, a 'green' state has a composite score (added) of 3 to 30, a 'yellow' \n                    state has a score of 31 to 110, and a 'red' state has a score of 111 to 150. \n                </p>\n            </Row>\n            <Row>\n            <Select defaultValue=\"Overall\" style={{ width: 170 }} onChange={this.setStateRankingMethod}>\n                                <Option value=\"Overall\">Overall</Option>\n                                <Option value=\"HealthCareAccess\">Healthcare Access</Option>\n                                <Option value=\"HealthCareQuality\">Healthcare Quality</Option>\n                                <Option value=\"PublicHealth\">Public Health</Option>\n                            </Select> \n            </Row>\n          <Row> \n            <USAMap customize={this.statesCustomConfig()} onClick={this.mapHandler} />\n          </Row>\n          <Row>\n            <label><strong>Selected State: {this.state.selectedState} </strong></label>\n        </Row><Row>\n            <Table dataSource={this.state.stateResults} columns={stateColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n          </Row>\n          <Row>\n          <Table dataSource={this.state.countyResults} columns={countyColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n          </Row>\n        \n        </Form>\n        </div>\n      );\n  }\n}\n\nexport default MapPage","/Users/taylorcunningham/Desktop/Design/project-code/client/src/components/MenuBar.js",[],{"ruleId":"61","severity":1,"message":"62","line":2,"column":16,"nodeType":"63","messageId":"64","endLine":2,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":2,"column":27,"nodeType":"63","messageId":"64","endLine":2,"endColumn":36},{"ruleId":"61","severity":1,"message":"66","line":2,"column":38,"nodeType":"63","messageId":"64","endLine":2,"endColumn":44},{"ruleId":"61","severity":1,"message":"67","line":5,"column":3,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"61","severity":1,"message":"68","line":11,"column":9,"nodeType":"63","messageId":"64","endLine":11,"endColumn":15},{"ruleId":"61","severity":1,"message":"69","line":11,"column":17,"nodeType":"63","messageId":"64","endLine":11,"endColumn":28},{"ruleId":"61","severity":1,"message":"70","line":12,"column":9,"nodeType":"63","messageId":"64","endLine":12,"endColumn":15},{"ruleId":"61","severity":1,"message":"71","line":30,"column":9,"nodeType":"63","messageId":"64","endLine":30,"endColumn":12},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":1,"nodeType":"78","messageId":"79","fix":"80"},{"ruleId":"72","replacedBy":"81"},{"ruleId":"74","replacedBy":"82"},{"ruleId":"61","severity":1,"message":"83","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"61","severity":1,"message":"62","line":3,"column":16,"nodeType":"63","messageId":"64","endLine":3,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":3,"column":27,"nodeType":"63","messageId":"64","endLine":3,"endColumn":36},{"ruleId":"61","severity":1,"message":"66","line":3,"column":38,"nodeType":"63","messageId":"64","endLine":3,"endColumn":44},{"ruleId":"61","severity":1,"message":"67","line":6,"column":3,"nodeType":"63","messageId":"64","endLine":6,"endColumn":13},{"ruleId":"61","severity":1,"message":"68","line":13,"column":9,"nodeType":"63","messageId":"64","endLine":13,"endColumn":15},{"ruleId":"61","severity":1,"message":"69","line":13,"column":17,"nodeType":"63","messageId":"64","endLine":13,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":97,"column":64,"nodeType":"86","messageId":"87","endLine":97,"endColumn":66},{"ruleId":"88","severity":1,"message":"89","line":104,"column":47,"nodeType":"90","messageId":"79","endLine":104,"endColumn":49},{"ruleId":"88","severity":1,"message":"89","line":163,"column":19,"nodeType":"90","messageId":"79","endLine":163,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":167,"column":26,"nodeType":"90","messageId":"79","endLine":167,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":171,"column":26,"nodeType":"90","messageId":"79","endLine":171,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":175,"column":26,"nodeType":"90","messageId":"79","endLine":175,"endColumn":28},"no-unused-vars","'FormInput' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Pagination' is defined but never used.","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'Option' is assigned a value but never used.","'map' is assigned a value but never used.","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"93","text":"94"},["91"],["92"],"'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation",[-1,0],""]