{"ast":null,"code":"var _jsxFileName = \"/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/MapPage.js\";\nimport React, { Component } from 'react';\nimport USAMap from \"react-usa-map\";\nimport { Form, FormInput, FormGroup, Button } from \"shards-react\";\nimport { Table, Pagination, Select, Row } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getNewsRankings, getNameFromCode, getCountiesFromState, getCodeToNumericRanking } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst stateColumns = [{\n  title: 'State',\n  dataIndex: 'Name',\n  key: 'Name'\n}, {\n  title: 'Code',\n  dataIndex: 'Code',\n  key: 'Code'\n}, {\n  title: 'Health Care Access Ranking',\n  dataIndex: 'HealthCareAccessRanking',\n  key: 'HealthCareAccessRanking'\n}, {\n  title: 'Health Care Quality Ranking',\n  dataIndex: 'HealthCareQualityRanking',\n  key: 'HealthCareQualityRanking'\n}, {\n  title: 'Public Health Ranking',\n  dataIndex: 'PublicHealthRanking',\n  key: 'PublicHealthRanking'\n}];\nconst countyColumns = [{\n  title: 'County Name',\n  dataIndex: 'name',\n  key: 'name',\n  sorter: (a, b) => a.name.localeCompare(b.name)\n}, {\n  title: 'Numeric Code',\n  dataIndex: 'fips',\n  key: 'fips'\n}];\n\nclass MapPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mapHandler = event => {\n      // alert(event.target.dataset.name);\n      console.log(event.target.dataset.className);\n      this.handleStateSelected(event.target.dataset.name);\n    };\n\n    this.statesCustomConfig = () => {\n      // initialize ranking data\n      var rankingData = {}; // mapping of states to rankings \n\n      this.state.stateCodeToNumericRanking.map((name, index) => {\n        // initialize variables\n        var stateCode = name.Code;\n        var stateRanking = name.Ranking;\n        var color = \"\"; // sort by \n\n        if (stateRanking <= 30) {\n          color = \"green\";\n        } else if (stateRanking <= 110) {\n          color = \"yellow\";\n        } else {\n          color = \"red\";\n        } // fill in object data\n\n\n        var stateCodeFill = {};\n        stateCodeFill[\"fill\"] = color;\n        rankingData[stateCode] = stateCodeFill;\n      });\n      return rankingData;\n    };\n\n    this.state = {\n      selectedState: \"\",\n      stateResults: [],\n      countyResults: [],\n      stateCodeToNumericRanking: []\n    };\n    this.handleStateSelected = this.handleStateSelected.bind(this);\n    this.mapHandler = this.mapHandler.bind(this);\n    this.statesCustomConfig = this.statesCustomConfig.bind(this);\n  } // MAP HANDLER FROM API \n\n\n  handleStateSelected(stateCode) {\n    // call function to get state name from code \n    getNameFromCode(stateCode).then(res => {\n      console.log(res.results);\n      this.setState({\n        selectedState: res.results[0].Name\n      });\n    }); // call function to get rankings\n\n    getNewsRankings(stateCode).then(res => {\n      this.setState({\n        stateResults: res.results\n      });\n    }); // call function to get list of all counties \n\n    getCountiesFromState(stateCode).then(res => {\n      this.setState({\n        countyResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    // when component mounts, get code to numeric ranking for all 50 states \n    getCodeToNumericRanking().then(res => {\n      this.setState({\n        stateCodeToNumericRanking: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Welcome to MedMap main interface!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \" Green: top ranking of states with 1-30, Yellow: middle ranking with 30-110, Red: bottom ranking with 110-150\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"Overall\",\n            style: {\n              width: 170\n            },\n            onChange: this.setRankingMethod,\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"Overall\",\n              children: \"Vancouver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Portland\",\n              children: \"Portland\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"San Francisco\",\n              children: \"San Francisco\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Seattle\",\n              children: \"Seattle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Los Angeles\",\n              children: \"Los Angeles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"San Diego\",\n              children: \"San Diego\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Las Vegas\",\n              children: \"Las Vegas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Pheonix\",\n              children: \"Pheonix\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Albuquerque\",\n              children: \"Albuquerque\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Denver\",\n              children: \"Denver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"San Antonio\",\n              children: \"San Antonio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Dallas\",\n              children: \"Dallas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Houston\",\n              children: \"Houston\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Kansas City\",\n              children: \"Kansas City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Minneapolis\",\n              children: \"Minneapolis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Saint Louis\",\n              children: \"Saint Louis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Chicago\",\n              children: \"Chicago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Nashville\",\n              children: \"Nashville\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Indianapolis\",\n              children: \"Indianapolis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Atlanta\",\n              children: \"Atlanta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Detriot\",\n              children: \"Detroit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Jacksonville\",\n              children: \"Jacksonville\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Charlotte\",\n              children: \"Charlotte\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Miami\",\n              children: \"Miami\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Pittsburgh\",\n              children: \"Pittsburgh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Toronto\",\n              children: \"Toronto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Philadelphia\",\n              children: \"Philadelphia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"New York\",\n              children: \"New York\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Montreal\",\n              children: \"Montreal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Boston\",\n              children: \"Boston\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Beersheba\",\n              children: \"Beersheeba\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Tel Aviv District\",\n              children: \"Tel Aviv District\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Elliat\",\n              children: \"Elliat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Haifa\",\n              children: \"Haifa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Nahariyya\",\n              children: \"Nahariyya\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"Jerusalem\",\n              children: \"Jerusalem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(USAMap, {\n            customize: this.statesCustomConfig(),\n            onClick: this.mapHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Selected State: \", this.state.selectedState, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: this.state.stateResults,\n            columns: stateColumns,\n            pagination: {\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 5,\n              showQuickJumper: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: this.state.countyResults,\n            columns: countyColumns,\n            pagination: {\n              pageSizeOptions: [5, 10],\n              defaultPageSize: 5,\n              showQuickJumper: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default MapPage;","map":{"version":3,"sources":["/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/MapPage.js"],"names":["React","Component","USAMap","Form","FormInput","FormGroup","Button","Table","Pagination","Select","Row","MenuBar","getNewsRankings","getNameFromCode","getCountiesFromState","getCodeToNumericRanking","Column","ColumnGroup","Option","stateColumns","title","dataIndex","key","countyColumns","sorter","a","b","name","localeCompare","MapPage","constructor","props","mapHandler","event","console","log","target","dataset","className","handleStateSelected","statesCustomConfig","rankingData","state","stateCodeToNumericRanking","map","index","stateCode","Code","stateRanking","Ranking","color","stateCodeFill","selectedState","stateResults","countyResults","bind","then","res","results","setState","Name","componentDidMount","render","width","margin","marginTop","setRankingMethod","pageSizeOptions","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport USAMap from \"react-usa-map\";\nimport { Form, FormInput, FormGroup, Button, } from \"shards-react\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getNewsRankings, getNameFromCode, getCountiesFromState, getCodeToNumericRanking } from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst stateColumns = [\n    {\n      title: 'State',\n      dataIndex: 'Name',\n      key: 'Name'\n    },\n    {\n      title: 'Code',\n      dataIndex: 'Code',\n      key: 'Code'\n    },\n    {\n      title: 'Health Care Access Ranking',\n      dataIndex: 'HealthCareAccessRanking',\n      key: 'HealthCareAccessRanking'\n      \n    },\n    {\n      title: 'Health Care Quality Ranking',\n      dataIndex: 'HealthCareQualityRanking',\n      key: 'HealthCareQualityRanking'\n    },\n    {\n        title: 'Public Health Ranking',\n        dataIndex: 'PublicHealthRanking',\n        key: 'PublicHealthRanking'\n    }\n  ];\n\nconst countyColumns = [\n    {\n        title: 'County Name',\n        dataIndex: 'name',\n        key: 'name',\n        sorter: (a, b) => a.name.localeCompare(b.name)\n      },\n      {\n        title: 'Numeric Code',\n        dataIndex: 'fips',\n        key: 'fips'\n      },\n];\n\n\nclass MapPage extends React.Component {\n\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        selectedState: \"\",\n        stateResults: [],\n        countyResults: [],\n        stateCodeToNumericRanking: [], \n    }\n\n    this.handleStateSelected = this.handleStateSelected.bind(this)\n    this.mapHandler = this.mapHandler.bind(this)\n    this.statesCustomConfig = this.statesCustomConfig.bind(this)\n\n  }\n\n      // MAP HANDLER FROM API \n      mapHandler = (event) => {\n        // alert(event.target.dataset.name);\n        console.log(event.target.dataset.className)\n        this.handleStateSelected(event.target.dataset.name)\n    };\n\n    statesCustomConfig = () => {\n        // initialize ranking data\n        var rankingData = {}\n\n        // mapping of states to rankings \n        this.state.stateCodeToNumericRanking.map((name, index) => {\n            // initialize variables\n            var stateCode = name.Code\n            var stateRanking = name.Ranking\n            var color = \"\"\n\n            // sort by \n            if (stateRanking <= 30) {\n                color = \"green\"\n            } else if (stateRanking <= 110) {\n                color = \"yellow\"\n            } else {\n                color = \"red\"\n            }\n\n            // fill in object data\n            var stateCodeFill = {}\n            stateCodeFill[\"fill\"] =  color\n            rankingData[stateCode] = stateCodeFill\n        });\n\n        return rankingData;\n      };\n\n  handleStateSelected(stateCode) {\n    // call function to get state name from code \n    getNameFromCode(stateCode).then(res => {\n        console.log(res.results)\n        this.setState({ selectedState: res.results[0].Name })\n    })\n\n    // call function to get rankings\n    getNewsRankings(stateCode).then(res => {\n        this.setState({ stateResults: res.results })\n    })\n\n    // call function to get list of all counties \n    getCountiesFromState(stateCode).then(res => {\n        this.setState({ countyResults: res.results })\n    })\n\n}\n\n  componentDidMount() {\n    // when component mounts, get code to numeric ranking for all 50 states \n    getCodeToNumericRanking().then(res => {\n        this.setState({ stateCodeToNumericRanking: res.results })\n    })\n  }\n\n \n  \n\n\n  render() {\n\n    return (\n        <div className=\"App\">\n        <MenuBar />\n        <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n                <h3> Welcome to MedMap main interface!</h3>\n                <h5> Green: top ranking of states with 1-30, Yellow: middle ranking with 30-110, Red: bottom ranking with 110-150</h5>\n            </Row>\n            <Row>\n            <Select defaultValue=\"Overall\" style={{ width: 170 }} onChange={this.setRankingMethod}>\n                                <Option value=\"Overall\">Vancouver</Option>\n                                <Option value=\"Portland\">Portland</Option>\n                                <Option value=\"San Francisco\">San Francisco</Option>\n                                <Option value=\"Seattle\">Seattle</Option>\n                                <Option value=\"Los Angeles\">Los Angeles</Option>\n                                <Option value=\"San Diego\">San Diego</Option>\n                                <Option value=\"Las Vegas\">Las Vegas</Option>\n                                <Option value=\"Pheonix\">Pheonix</Option>\n                                <Option value=\"Albuquerque\">Albuquerque</Option>\n                                <Option value=\"Denver\">Denver</Option>\n                                <Option value=\"San Antonio\">San Antonio</Option>\n                                <Option value=\"Dallas\">Dallas</Option>\n                                <Option value=\"Houston\">Houston</Option>\n                                <Option value=\"Kansas City\">Kansas City</Option>\n                                <Option value=\"Minneapolis\">Minneapolis</Option>\n                                <Option value=\"Saint Louis\">Saint Louis</Option>\n                                <Option value=\"Chicago\">Chicago</Option>\n                                <Option value=\"Nashville\">Nashville</Option>\n                                <Option value=\"Indianapolis\">Indianapolis</Option>\n                                <Option value=\"Atlanta\">Atlanta</Option>\n                                <Option value=\"Detriot\">Detroit</Option>\n                                <Option value=\"Jacksonville\">Jacksonville</Option>\n                                <Option value=\"Charlotte\">Charlotte</Option>\n                                <Option value=\"Miami\">Miami</Option>\n                                <Option value=\"Pittsburgh\">Pittsburgh</Option>\n                                <Option value=\"Toronto\">Toronto</Option>\n                                <Option value=\"Philadelphia\">Philadelphia</Option>\n                                <Option value=\"New York\">New York</Option>\n                                <Option value=\"Montreal\">Montreal</Option>\n                                <Option value=\"Boston\">Boston</Option>\n                                <Option value=\"Beersheba\">Beersheeba</Option>\n                                <Option value=\"Tel Aviv District\">Tel Aviv District</Option>\n                                <Option value=\"Elliat\">Elliat</Option>\n                                <Option value=\"Haifa\">Haifa</Option>\n                                <Option value=\"Nahariyya\">Nahariyya</Option>\n                                <Option value=\"Jerusalem\">Jerusalem</Option>\n                            </Select> \n            </Row>\n          <Row> \n            <USAMap customize={this.statesCustomConfig()} onClick={this.mapHandler} />\n          </Row>\n          <Row>\n            <label><strong>Selected State: {this.state.selectedState} </strong></label>\n        </Row><Row>\n            <Table dataSource={this.state.stateResults} columns={stateColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n          </Row>\n          <Row>\n          <Table dataSource={this.state.countyResults} columns={countyColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n          </Row>\n        \n        </Form>\n        </div>\n      );\n  }\n}\n\nexport default MapPage"]},"metadata":{},"sourceType":"module"}