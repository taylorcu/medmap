{"ast":null,"code":"var _jsxFileName = \"/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/SuggestPage.js\";\nimport React from 'react';\nimport { Form, FormGroup, Button, FormCheckbox } from \"shards-react\";\nimport { Table, Row, Col, Select, Slider } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { cities } from '../components/CityArray';\nimport { months } from '../components/MonthArray';\nimport { getSuggestions, getAttractions } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst suggestionColumns = [{\n  title: 'City',\n  dataIndex: 'city_name',\n  key: 'city_name',\n  sorter: (a, b) => a.city_name.localeCompare(b.city_name)\n}, {\n  title: 'Month',\n  dataIndex: 'month_name',\n  key: 'month_name',\n  sorter: (a, b) => a.month_name.localeCompare(b.month_name)\n}, {\n  title: 'Day',\n  dataIndex: 'day_number',\n  key: 'day_number',\n  sorter: (a, b) => a.day_number - b.day_number\n}, {\n  title: 'Time of Day',\n  dataIndex: 'timeOfDay',\n  key: 'timeOfDay',\n  sorter: (a, b) => a.timeOfDay.localeCompare(b.timeOfDay)\n}];\nconst attractionColumns = [{\n  title: 'City',\n  dataIndex: 'city_name',\n  key: 'city_name',\n  sorter: (a, b) => a.city_name.localeCompare(b.city_name)\n}, {\n  title: 'Season',\n  dataIndex: 'season',\n  key: 'season',\n  sorter: (a, b) => a.season.localeCompare(b.season)\n}, {\n  title: 'Attraction',\n  dataIndex: 'attraction_name',\n  key: 'attraction_name',\n  sorter: (a, b) => a.day_number - b.day_number\n}, {\n  title: 'Website',\n  dataIndex: 'website',\n  key: 'website',\n  render: (text, record) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: text,\n    target: \"_blank\",\n    children: \"Link\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 31\n  }, this)\n}, {\n  title: 'Photo',\n  dataIndex: 'photo',\n  key: 'photo',\n  render: text => /*#__PURE__*/_jsxDEV(\"img\", {\n    src: text,\n    referrerPolicy: \"no-referrer\",\n    alt: null,\n    style: {\n      height: '15vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 23\n  }, this)\n}];\n\nclass SuggestPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityCheckedState: new Array(cities.length).fill(false),\n      monthCheckedState: new Array(months.length).fill(false),\n      morningCheck: false,\n      afternoonCheck: false,\n      eveningCheck: false,\n      nightCheck: false,\n      temperatureMin: -24.0,\n      temperatureMax: 120.0,\n      humidityMin: 0.0,\n      humidityMax: 100.0,\n      pressureMin: 0.0,\n      pressureMax: 1000.0,\n      suggestionsResults: [],\n      attractionsResults: [],\n      errorMessage: \"\",\n      loadingMessage: \"\"\n    }; // CITY CHECKS \n\n    this.handleCityCheckChange = this.handleCityCheckChange.bind(this); // MONTH CHECKS\n\n    this.handleMonthCheckChange = this.handleMonthCheckChange.bind(this); // TIME OF DAY CHECKS\n\n    this.handleMorningCheckChange = this.handleMorningCheckChange.bind(this);\n    this.handleAfternoonCheckChange = this.handleAfternoonCheckChange.bind(this);\n    this.handleEveningCheckChange = this.handleEveningCheckChange.bind(this);\n    this.handleNightCheckChange = this.handleNightCheckChange.bind(this); // TEMPERATURE CHANGES \n\n    this.handleTemperatureChange = this.handleTemperatureChange.bind(this);\n    this.handleHumidityChange = this.handleHumidityChange.bind(this);\n    this.handlePressureChange = this.handlePressureChange.bind(this); // SUGGEST\n\n    this.startSuggesting = this.startSuggesting.bind(this);\n  }\n\n  handleCityCheckChange(e, position) {\n    // update only the correct index to be its opposite\n    const newCheckedState = this.state.cityCheckedState.map((item, index) => index === position ? !item : item); // set using state\n\n    this.setState({\n      cityCheckedState: newCheckedState\n    });\n  }\n\n  handleMonthCheckChange(e, position) {\n    // update only the correct index to be its opposite\n    const newCheckedState = this.state.monthCheckedState.map((item, index) => index === position ? !item : item); // set using state\n\n    this.setState({\n      monthCheckedState: newCheckedState\n    });\n  }\n\n  handleMorningCheckChange(e) {\n    const oldVal = this.state.morningCheck;\n    const newVal = !oldVal;\n    this.setState({\n      morningCheck: newVal\n    });\n  }\n\n  handleAfternoonCheckChange(e) {\n    const oldVal = this.state.afternoonCheck;\n    const newVal = !oldVal;\n    this.setState({\n      afternoonCheck: newVal\n    });\n  }\n\n  handleEveningCheckChange(e) {\n    const oldVal = this.state.eveningCheck;\n    const newVal = !oldVal;\n    this.setState({\n      eveningCheck: newVal\n    });\n  }\n\n  handleNightCheckChange(e) {\n    const oldVal = this.state.nightCheck;\n    const newVal = !oldVal;\n    this.setState({\n      nightCheck: newVal\n    });\n  }\n\n  handleTemperatureChange(value) {\n    this.setState({\n      temperatureMin: value[0]\n    });\n    this.setState({\n      temperatureMax: value[1]\n    });\n  }\n\n  handleHumidityChange(value) {\n    this.setState({\n      humidityMin: value[0]\n    });\n    this.setState({\n      humidityMax: value[1]\n    });\n  }\n\n  handlePressureChange(value) {\n    this.setState({\n      pressureMin: value[0]\n    });\n    this.setState({\n      pressureMax: value[1]\n    });\n  }\n\n  startSuggesting() {\n    // set results to be empty while processing \n    this.setState({\n      suggestionsResults: []\n    });\n    this.setState({\n      attractionsResults: []\n    });\n    this.setState({\n      errorMessage: \"\"\n    }); // create lists \n\n    const cityList = [];\n    const monthList = [];\n    const timeOfDayList = []; // iterate over cities and get checked ones \n\n    for (var i = 0; i < this.state.cityCheckedState.length; i++) {\n      if (this.state.cityCheckedState[i]) {\n        cityList.push(cities[i]);\n      }\n    } // same for months \n\n\n    for (var i = 0; i < this.state.monthCheckedState.length; i++) {\n      if (this.state.monthCheckedState[i]) {\n        monthList.push(months[i]);\n      }\n    } // check time of day individually \n\n\n    if (this.state.morningCheck) {\n      timeOfDayList.push('morning');\n    }\n\n    if (this.state.afternoonCheck) {\n      timeOfDayList.push('afternoon');\n    }\n\n    if (this.state.eveningCheck) {\n      timeOfDayList.push('evening');\n    }\n\n    if (this.state.nightCheck) {\n      timeOfDayList.push('night');\n    } // if any of the lists are empty, don't submit and set error message \n\n\n    if (cityList.length === 0 || monthList.length === 0 || timeOfDayList.length === 0) {\n      console.log('error');\n      this.setState({\n        errorMessage: \"Must select at least one city, month, and time of day.\"\n      });\n      return;\n    } // set loading message \n\n\n    this.setState({\n      loadingMessage: \"Loading...\"\n    }); // call function and set results \n\n    getSuggestions(cityList, monthList, timeOfDayList, this.state.temperatureMin, this.state.temperatureMax, this.state.pressureMin, this.state.pressureMax, this.state.humidityMin, this.state.humidityMax).then(res => {\n      console.log('results returned');\n      console.log(res.results);\n      this.setState({\n        suggestionsResults: res.results\n      });\n\n      if (res.results.length === 0) {\n        console.log('results are empty');\n        this.setState({\n          errorMessage: \"There are no dates that match your given criteria!\"\n        });\n      }\n    }); // call function to get attractions from suggestions results \n\n    getAttractions(cityList, monthList, timeOfDayList, this.state.temperatureMin, this.state.temperatureMax, this.state.pressureMin, this.state.pressureMax, this.state.humidityMin, this.state.humidityMax).then(res => {\n      this.setState({\n        attractionsResults: res.results\n      });\n      this.setState({\n        loadingMessage: \"\"\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Suggest Page \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"This page will suggest dates for your event. Select acceptable cities, months, and times of day that you want to have your event, along with the range of weather you are willing to have, and the application will return suggested dates where the weather has met all your parameters for that time of day sometime in the last 5 years, as well as some attractions available in that place and season suggested. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Select all city options.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 20\n            }, this), \" \\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), cities.map((name, index) => {\n            return /*#__PURE__*/_jsxDEV(FormCheckbox, {\n              checked: this.state.cityCheckedState[index],\n              onChange: e => this.handleCityCheckChange(e, index),\n              children: [name, \" \\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Select all month options.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 22\n            }, this), \" \\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), months.map((name, index) => {\n            return /*#__PURE__*/_jsxDEV(FormCheckbox, {\n              checked: this.state.monthCheckedState[index],\n              onChange: e => this.handleMonthCheckChange(e, index),\n              children: [name, \" \\xA0\\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Select all time of day options.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 22\n            }, this), \" \\xA0\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormCheckbox, {\n            checked: this.state.morningCheck,\n            onChange: this.handleMorningCheckChange,\n            children: \"Morning \\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormCheckbox, {\n            checked: this.state.afternoonCheck,\n            onChange: this.handleAfternoonCheckChange,\n            children: \"Afternoon \\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormCheckbox, {\n            checked: this.state.eveningCheck,\n            onChange: this.handleEveningCheckChange,\n            children: \"Evening \\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormCheckbox, {\n            checked: this.state.nightCheck,\n            onChange: this.handleNightCheckChange,\n            children: \"Night \\xA0\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Select all desired weather parameters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Temperature (F)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                range: true,\n                defaultValue: [-20, 100],\n                onChange: this.handleTemperatureChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Pressure (hPa) \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                range: true,\n                defaultValue: [0, 1000],\n                onChange: this.handlePressureChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Humidity (%)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                range: true,\n                defaultValue: [0, 100],\n                onChange: this.handleHumidityChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            flex: 3,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '10vw'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: '4vh'\n                },\n                onClick: this.startSuggesting,\n                children: \"Suggest Some Dates!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 3,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '10vw'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: this.state.errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 3,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '10vw'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: this.state.loadingMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), this.state.suggestionsResults.length != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            width: '80vw',\n            margin: '0 auto',\n            marginTop: '5vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Suggestion Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              dataSource: this.state.suggestionsResults,\n              columns: suggestionColumns,\n              pagination: {\n                pageSizeOptions: [5, 10],\n                defaultPageSize: 5,\n                showQuickJumper: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          style: {\n            width: '80vw',\n            margin: '0 auto',\n            marginTop: '5vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Learn more! Here are possible attractions to visit for the cities and seasons we suggested.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              dataSource: this.state.attractionsResults,\n              columns: attractionColumns,\n              pagination: {\n                pageSizeOptions: [5, 10],\n                defaultPageSize: 5,\n                showQuickJumper: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SuggestPage;","map":{"version":3,"sources":["/Users/taylorcunningham/Desktop/Design/project-code/client/src/pages/SuggestPage.js"],"names":["React","Form","FormGroup","Button","FormCheckbox","Table","Row","Col","Select","Slider","MenuBar","cities","months","getSuggestions","getAttractions","Column","ColumnGroup","Option","suggestionColumns","title","dataIndex","key","sorter","a","b","city_name","localeCompare","month_name","day_number","timeOfDay","attractionColumns","season","render","text","record","height","SuggestPage","Component","constructor","props","state","cityCheckedState","Array","length","fill","monthCheckedState","morningCheck","afternoonCheck","eveningCheck","nightCheck","temperatureMin","temperatureMax","humidityMin","humidityMax","pressureMin","pressureMax","suggestionsResults","attractionsResults","errorMessage","loadingMessage","handleCityCheckChange","bind","handleMonthCheckChange","handleMorningCheckChange","handleAfternoonCheckChange","handleEveningCheckChange","handleNightCheckChange","handleTemperatureChange","handleHumidityChange","handlePressureChange","startSuggesting","e","position","newCheckedState","map","item","index","setState","oldVal","newVal","value","cityList","monthList","timeOfDayList","i","push","console","log","then","res","results","width","margin","marginTop","name","color","pageSizeOptions","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, FormGroup, Button, FormCheckbox, } from \"shards-react\";\n\n\nimport {\n    Table,\n    Row,\n    Col,\n    Select,\n    Slider,\n\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\n\nimport {cities} from '../components/CityArray';\nimport {months} from '../components/MonthArray';\nimport { getSuggestions, getAttractions } from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst suggestionColumns = [\n  {\n    title: 'City',\n    dataIndex: 'city_name',\n    key: 'city_name',\n    sorter: (a, b) => a.city_name.localeCompare(b.city_name),\n  },\n  {\n    title: 'Month',\n    dataIndex: 'month_name',\n    key: 'month_name',\n    sorter: (a, b) => a.month_name.localeCompare(b.month_name)\n  },\n  {\n    title: 'Day',\n    dataIndex: 'day_number',\n    key: 'day_number',\n    sorter: (a, b) => a.day_number - b.day_number\n    \n  },\n  {\n    title: 'Time of Day',\n    dataIndex: 'timeOfDay',\n    key: 'timeOfDay',\n    sorter: (a, b) => a.timeOfDay.localeCompare(b.timeOfDay),\n  }\n];\n\nconst attractionColumns = [ \n  {\n    title: 'City',\n    dataIndex: 'city_name',\n    key: 'city_name',\n    sorter: (a, b) => a.city_name.localeCompare(b.city_name),\n  },\n  {\n    title: 'Season',\n    dataIndex: 'season',\n    key: 'season',\n    sorter: (a, b) => a.season.localeCompare(b.season)\n  },\n  {\n    title: 'Attraction',\n    dataIndex: 'attraction_name',\n    key: 'attraction_name',\n    sorter: (a, b) => a.day_number - b.day_number\n    \n  },\n  {\n    title: 'Website',\n    dataIndex: 'website',\n    key: 'website',\n    render: (text, record) => <a href={text} target=\"_blank\">Link</a>\n  },\n  {\n    title: 'Photo',\n    dataIndex: 'photo',\n    key: 'photo',\n    render: (text) => <img src={text} referrerPolicy=\"no-referrer\" alt={null} style={{height:'15vh'}}></img>\n\n  }\n];\n\nclass SuggestPage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        cityCheckedState: new Array(cities.length).fill(false),\n        monthCheckedState: new Array(months.length).fill(false),\n\n        morningCheck: false,\n        afternoonCheck: false, \n        eveningCheck: false,\n        nightCheck: false,\n\n        temperatureMin: -24.0,\n        temperatureMax: 120.0, \n        humidityMin: 0.0,\n        humidityMax: 100.0,\n        pressureMin: 0.0, \n        pressureMax: 1000.0,\n\n        suggestionsResults: [],\n        attractionsResults: [],\n        errorMessage: \"\",\n        loadingMessage: \"\",\n    };\n\n    // CITY CHECKS \n    this.handleCityCheckChange = this.handleCityCheckChange.bind(this);\n\n    // MONTH CHECKS\n    this.handleMonthCheckChange = this.handleMonthCheckChange.bind(this); \n\n    // TIME OF DAY CHECKS\n    this.handleMorningCheckChange = this.handleMorningCheckChange.bind(this); \n    this.handleAfternoonCheckChange = this.handleAfternoonCheckChange.bind(this); \n    this.handleEveningCheckChange = this.handleEveningCheckChange.bind(this); \n    this.handleNightCheckChange = this.handleNightCheckChange.bind(this); \n\n    // TEMPERATURE CHANGES \n    this.handleTemperatureChange = this.handleTemperatureChange.bind(this);\n    this.handleHumidityChange = this.handleHumidityChange.bind(this);\n    this.handlePressureChange = this.handlePressureChange.bind(this);\n\n    // SUGGEST\n    this.startSuggesting = this.startSuggesting.bind(this)\n\n  }\n\n\n  handleCityCheckChange(e, position) {\n    // update only the correct index to be its opposite\n    const newCheckedState = this.state.cityCheckedState.map((item, index) => \n        index === position ? !item : item);\n\n    // set using state\n    this.setState({cityCheckedState: newCheckedState})\n  }\n\n  handleMonthCheckChange(e, position) {\n    // update only the correct index to be its opposite\n    const newCheckedState = this.state.monthCheckedState.map((item, index) => \n        index === position ? !item : item);\n\n    // set using state\n    this.setState({monthCheckedState: newCheckedState})\n  }\n\n  handleMorningCheckChange(e) {\n    const oldVal = this.state.morningCheck\n    const newVal = !oldVal\n    this.setState({ morningCheck: newVal })\n  }\n\n  handleAfternoonCheckChange(e) {\n    const oldVal = this.state.afternoonCheck\n    const newVal = !oldVal\n    this.setState({afternoonCheck: newVal})\n  }\n\n  handleEveningCheckChange(e) {\n    const oldVal = this.state.eveningCheck\n    const newVal = !oldVal\n    this.setState({eveningCheck: newVal})\n  }\n\n  handleNightCheckChange(e) {\n    const oldVal = this.state.nightCheck\n    const newVal = !oldVal\n    this.setState({nightCheck: newVal})\n  }\n\n  handleTemperatureChange(value) {\n    this.setState({ temperatureMin: value[0] })\n    this.setState({ temperatureMax: value[1] })\n  }\n\n  handleHumidityChange(value) {\n      this.setState({ humidityMin: value[0] })\n      this.setState({ humidityMax: value[1] })\n  }\n\n  handlePressureChange(value) {\n      this.setState({ pressureMin: value[0] })\n      this.setState({ pressureMax: value[1] })\n  }\n\nstartSuggesting() {\n  // set results to be empty while processing \n  this.setState({suggestionsResults: []})\n  this.setState({attractionsResults: []})\n  this.setState({errorMessage: \"\"})\n\n  // create lists \n  const cityList = []\n  const monthList = []\n  const timeOfDayList = []\n\n  // iterate over cities and get checked ones \n  for (var i = 0; i < this.state.cityCheckedState.length; i++) {\n    if (this.state.cityCheckedState[i]) {\n      cityList.push(cities[i])\n    }\n  }\n\n  // same for months \n  for (var i = 0; i < this.state.monthCheckedState.length; i++) {\n    if (this.state.monthCheckedState[i]) {\n      monthList.push(months[i])\n    }\n  }\n\n  // check time of day individually \n  if (this.state.morningCheck) {\n    timeOfDayList.push('morning')\n  }\n\n  if (this.state.afternoonCheck) {\n    timeOfDayList.push('afternoon')\n  }\n\n  if (this.state.eveningCheck) {\n    timeOfDayList.push('evening')\n  }\n\n  if (this.state.nightCheck) {\n    timeOfDayList.push('night')\n  }\n\n  // if any of the lists are empty, don't submit and set error message \n  if (cityList.length === 0 || monthList.length === 0 || timeOfDayList.length === 0) {\n    console.log('error')\n    this.setState({ errorMessage: \"Must select at least one city, month, and time of day.\"})\n    return\n  }\n\n  // set loading message \n  this.setState({ loadingMessage: \"Loading...\"})\n\n  // call function and set results \n  getSuggestions(cityList, monthList, timeOfDayList, this.state.temperatureMin, this.state.temperatureMax, this.state.pressureMin, this.state.pressureMax, this.state.humidityMin, this.state.humidityMax).then(res => {\n    console.log('results returned')\n    console.log(res.results)\n    this.setState({ suggestionsResults: res.results })\n    if (res.results.length === 0) {\n      console.log('results are empty')\n      this.setState({errorMessage: \"There are no dates that match your given criteria!\"});\n    }\n  })\n\n  // call function to get attractions from suggestions results \n  getAttractions(cityList, monthList, timeOfDayList, this.state.temperatureMin, this.state.temperatureMax, this.state.pressureMin, this.state.pressureMax, this.state.humidityMin, this.state.humidityMax).then(res => {\n    this.setState({ attractionsResults: res.results })\n    this.setState({ loadingMessage: \"\"})\n  })\n}\n\n\n  render() {\n\n    return (\n      <div>\n        <MenuBar />\n        <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3> Suggest Page </h3>\n          <h5>This page will suggest dates for your event. Select acceptable cities, months, and times of day that you want to have your event,\n          along with the range of weather you are willing to have, and the application will return suggested dates where the weather \n          has met all your parameters for that time of day sometime in the last 5 years, as well as some attractions available \n          in that place and season suggested. </h5>\n        </Form>\n        <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n          <Row>\n            <label><strong>Select all city options.</strong> &nbsp;&nbsp;</label>\n            {cities.map((name, index) => {\n              return (\n                <FormCheckbox checked={this.state.cityCheckedState[index]} onChange={e => this.handleCityCheckChange(e, index)}>{name} &nbsp;&nbsp;</FormCheckbox>\n              );\n            })}\n            </Row>\n            <Row>\n              <label><strong>Select all month options.</strong> &nbsp;&nbsp;</label>\n              {months.map((name, index) => {\n                return (\n                  <FormCheckbox checked={this.state.monthCheckedState[index]} onChange={e => this.handleMonthCheckChange(e, index)}>{name} &nbsp;&nbsp;</FormCheckbox>\n                );\n              })}\n            </Row>\n            <Row>\n              <label><strong>Select all time of day options.</strong> &nbsp;&nbsp;</label>\n              <FormCheckbox checked={this.state.morningCheck} onChange={this.handleMorningCheckChange}>Morning &nbsp;&nbsp;</FormCheckbox>\n              <FormCheckbox checked={this.state.afternoonCheck} onChange={this.handleAfternoonCheckChange}>Afternoon &nbsp;&nbsp;</FormCheckbox>\n              <FormCheckbox checked={this.state.eveningCheck} onChange={this.handleEveningCheckChange}>Evening &nbsp;&nbsp;</FormCheckbox>\n              <FormCheckbox checked={this.state.nightCheck} onChange={this.handleNightCheckChange}>Night &nbsp;&nbsp;</FormCheckbox>\n            </Row>\n            <Row>\n              <label><strong>Select all desired weather parameters.</strong></label>\n            </Row>\n            <Row>\n              <Col flex={2}>\n                <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                  <label>Temperature (F)</label>\n                  <Slider range defaultValue={[-20, 100]} onChange={this.handleTemperatureChange} />\n                </FormGroup>\n              </Col>\n              <Col flex={2}>\n                <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                  <label>Pressure (hPa) </label>\n                  <Slider range defaultValue={[0, 1000]} onChange={this.handlePressureChange} />\n                  </FormGroup>\n                </Col>\n                <Col flex={2}>\n                  <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                    <label>Humidity (%)</label>\n                    <Slider range defaultValue={[0, 100]} onChange={this.handleHumidityChange} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col flex={3}>\n                  <FormGroup style={{ width: '10vw' }}>\n                    <Button style={{ marginTop: '4vh' }} onClick={this.startSuggesting}>Suggest Some Dates!</Button>\n                  </FormGroup>\n                </Col>\n                <Col flex={3}>\n                  <FormGroup style={{ width: '10vw' }}>\n                    <p style={{color:\"red\"}} >{this.state.errorMessage}</p>\n                  </FormGroup>\n                </Col>\n                <Col flex={3}>\n                  <FormGroup style={{ width: '10vw' }}>\n                    <p style={{color:\"red\"}} >{this.state.loadingMessage}</p>\n                  </FormGroup>\n                </Col>\n              </Row>\n            </Form>\n          {(this.state.suggestionsResults.length != 0) && <div>\n            <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n            <label><strong>Suggestion Results</strong></label>\n            </Row><Row>\n              <Table dataSource={this.state.suggestionsResults} columns={suggestionColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n            </Row>\n          </Form>\n          <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n            <Row>\n            <label><strong>Learn more! Here are possible attractions to visit for the cities and seasons we suggested.</strong></label>\n            </Row><Row>\n              <Table dataSource={this.state.attractionsResults} columns={attractionColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n            </Row>\n          </Form></div>\n          }\n            \n      </div>\n    )\n  }\n}\n\nexport default SuggestPage"]},"metadata":{},"sourceType":"module"}